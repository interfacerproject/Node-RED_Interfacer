[{"id":"a9cf961a3a52160c","type":"tab","label":"Isolation Gowns","disabled":false,"info":"","env":[]},{"id":"29dcfb15ba1e5f55","type":"tab","label":"Notebook API","disabled":false,"info":"","env":[]},{"id":"f781100da59ddc5d","type":"subflow","name":"Sign Subflow","info":"","category":"","in":[{"x":80,"y":120,"wires":[{"id":"612e6762f465c1e6"}]}],"out":[{"x":640,"y":120,"wires":[{"id":"bc59db00aa1fe6b1","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"a1f23e7f9e7ee37e","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"612e6762f465c1e6","type":"function","z":"f781100da59ddc5d","name":"Generate Signature","func":"const zenroom = global.get(\"zenroom\");\n\nconst sign_script = `\nScenario eddsa: sign a graph query\nGiven I have a 'base64' named 'gql'\nGiven I have a 'keyring'\n\nWhen I create the eddsa signature of 'gql'\nAnd I create the hash of 'gql'\n\nThen print 'eddsa signature' as 'base64'\nThen print 'gql' as 'base64'\nThen print 'hash' as 'hex'\n`;\n\n// Create the JSON body to be sent to the back-end\nconst body = JSON.stringify({\n    query: msg.sign.query,\n    variables: msg.variables\n});\n\n\nmsg.sign.body = body;\n\nconst zenKeys = JSON.stringify({keyring: {eddsa: msg.sign.eddsa}});\n\nmsg.sign.zenKeys = zenKeys;\n\n// Encode the JSON body as base64\nconst zenData = JSON.stringify({gql: Buffer.from(body, 'utf8').toString('base64')})\n\nmsg.sign.zenData = zenData;\n\nlet res = await zenroom.zencode_exec(sign_script, { data: msg.sign.zenData, keys: msg.sign.zenKeys})\n            .then((result) => {\n                console.log(\"Msg : \", result.result);\n                const res = JSON.parse(result.result);\n                console.log(\"Msg signature: \", res);\n                return res;\n            }).catch((error) => {\n                console.error(\"Error in zenroom sign function: \", error);\n                return error;\n\n            });\n\nmsg.sign.signature = res;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":120,"wires":[["bc59db00aa1fe6b1"]]},{"id":"bc59db00aa1fe6b1","type":"function","z":"f781100da59ddc5d","name":"Prepare request","func":"// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\n\nmsg.headers['zenflows-sign'] = msg.sign.signature.eddsa_signature;\nmsg.headers['zenflows-user'] = msg.sign.username;\nmsg.headers['zenflows-hash'] = msg.sign.signature.hash;\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\n\n// This is going to destroy the msg.payload!!!\n// msg.payload = msg.sign.body;\nmsg.payload = msg.sign.body;\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":120,"wires":[[]]},{"id":"b582df30a9d2445c","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":630,"y":900,"wires":[]},{"id":"d77006acee54af34","type":"http in","z":"a9cf961a3a52160c","name":"Form","url":"/interfacer/getHMAC","method":"post","upload":false,"swaggerDoc":"","x":90,"y":80,"wires":[["01f2e8dd1ac14440"]]},{"id":"01f2e8dd1ac14440","type":"function","z":"a9cf961a3a52160c","name":"Get HMAC","func":"\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst variables = {\n    \"firstRegistration\": true,\n    \"userData\": \"{\\\"email\\\": \\\"\" + msg.payload.email + \"\\\"}\"\n};\n\n// To get this in the debug output\nmsg.variables = variables\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation ($firstRegistration: Boolean!, $userData: String!){\n  \n    keypairoomServer(firstRegistration: $firstRegistration, userData: $userData)\n      \n  }`,\n  variables: variables\n})\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":80,"wires":[["ced9f63df845af74","beadd72e20548fee"]]},{"id":"ced9f63df845af74","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":450,"y":80,"wires":[["beadd72e20548fee","bbeba4dd2bc281e6"]]},{"id":"6b9a303ec68aaf47","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst label = msg.payload.label;\nconst symbol = msg.payload.symbol;\n\n// Produce the query and variables vars to be signed\nconst variables = {\"unit\": {\n                        \"label\": label,\n                        \"symbol\": symbol\n                        }\n            };\n\n\nconst query = `mutation($unit:UnitCreateParams!) {\n            createUnit(unit: $unit) {\n                unit {\n                    id\n                }\n            }\n          }`;\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":520,"wires":[["cafeb261165160b1","9a42dde3957dd0ad"]]},{"id":"41a31f091965c362","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":630,"y":520,"wires":[["9a42dde3957dd0ad","7e3394bb6ca1da06"]]},{"id":"e7f96084acdd0aa2","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst name = msg.payload.process_name;\nconst note = msg.payload.process_note;\n\n// Produce the query and variables vars to be signed\nconst ts = new Date(Date.now());\n\nconst variables = {\n      \"process\": {\n        \"name\": name,\n        \"note\": note,\n        \"hasBeginning\": ts,\n        \"hasEnd\": ts\n      }\n  };\n\nconst query = `mutation($process:ProcessCreateParams!) {\n\t  createProcess(process: $process) {\n\t\tprocess {\n\t\t  id\n\t\t}\n\t  }\n\t}`;\n\t\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":980,"wires":[["b1dddf12ee1a9e24","6905f51ee38526b3"]]},{"id":"6196df0943914213","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":850,"y":80,"wires":[]},{"id":"bbeba4dd2bc281e6","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"// Read the payload\nvar seed = msg.payload.data.keypairoomServer;\n\n// Provide an answer\nmsg.payload = {};\nmsg.payload.seed = seed;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":80,"wires":[["6196df0943914213"]]},{"id":"cf3e88999b724618","type":"comment","z":"a9cf961a3a52160c","name":"Get server seed","info":"","x":120,"y":40,"wires":[]},{"id":"9927f0b45d15344b","type":"http in","z":"a9cf961a3a52160c","name":"createUnit","url":"/interfacer/createUnit","method":"post","upload":false,"swaggerDoc":"","x":100,"y":520,"wires":[["6b9a303ec68aaf47"]]},{"id":"7e3394bb6ca1da06","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"// Read the payload\nconst unit = msg.payload.data.createUnit.unit.id;\n\nmsg.payload = {};\nmsg.payload.unit = unit;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":520,"wires":[["71f92c67ca67af48"]]},{"id":"71f92c67ca67af48","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":520,"wires":[]},{"id":"72c05c5c0bd10d12","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":840,"wires":[]},{"id":"04c370bd35360547","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\nconst resourceId = msg.payload.data.createEconomicEvent.economicEvent.resourceInventoriedAs.id;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\nmsg.payload.resourceId = resourceId;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":840,"wires":[["72c05c5c0bd10d12"]]},{"id":"75ad1ae27b0775fb","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":650,"y":840,"wires":[["b582df30a9d2445c","04c370bd35360547"]]},{"id":"62fcaf5db019d842","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst agent_id = msg.payload.agent_id;\nconst resource_id = msg.payload.resource_id;\nconst resource_name = msg.payload.resource_name;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst classification = msg.payload.classification;\n\n// Produce the query and variables vars to be signed\nconst ts = new Date(Date.now());\n\nconst variables = {\n        \"event\": {\n            \"note\": \"update event\",\n            \"action\": \"raise\",\n            \"provider\": agent_id, \n            \"receiver\": agent_id,\n            \"hasPointInTime\" : ts,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            },\n            \"resourceConformsTo\": classification\n        },\n        \"newInventoriedResource\": { \n            \"name\": resource_name,\n            \"trackingIdentifier\": resource_id\n        }\n};\n\nconst query = `mutation($event:EconomicEventCreateParams!, $newInventoriedResource:EconomicResourceCreateParams) {\n                createEconomicEvent(event:$event, newInventoriedResource:$newInventoriedResource) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            trackingIdentifier  \n                      }\n                    }\n                }\n            }`;\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":840,"wires":[["b582df30a9d2445c","d4a01c7ff1aa60f2"]]},{"id":"13197e6bea34f939","type":"http in","z":"a9cf961a3a52160c","name":"createResource","url":"/interfacer/createResource","method":"post","upload":false,"swaggerDoc":"","x":120,"y":840,"wires":[["62fcaf5db019d842"]]},{"id":"ec61e56c21eb3e9f","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const processId = msg.payload.data.createProcess.process.id;\n\n\nmsg.payload = {};\nmsg.payload.processId = processId;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":980,"wires":[["c3e3e6232d39d1b6"]]},{"id":"cf36936a5c75bfd6","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":630,"y":980,"wires":[["6905f51ee38526b3","ec61e56c21eb3e9f"]]},{"id":"c3e3e6232d39d1b6","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":980,"wires":[]},{"id":"6905f51ee38526b3","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":1040,"wires":[]},{"id":"b82c72a08c1a9fde","type":"http in","z":"a9cf961a3a52160c","name":"createProcess","url":"/interfacer/createProcess","method":"post","upload":false,"swaggerDoc":"","x":110,"y":980,"wires":[["e7f96084acdd0aa2"]]},{"id":"71e1a605b5ded04e","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":1400,"wires":[]},{"id":"ec313c7bf8cd91cf","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\n\nconst transferredId = msg.payload.data.createEconomicEvent.economicEvent.toResourceInventoriedAs.id;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\nmsg.payload.transferredId = transferredId;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":1400,"wires":[["71e1a605b5ded04e"]]},{"id":"1f51d816c9254a8e","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":630,"y":1400,"wires":[["78bbd41a6c118d6b","ec313c7bf8cd91cf"]]},{"id":"78bbd41a6c118d6b","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":1460,"wires":[]},{"id":"26c12da433641d7d","type":"http in","z":"a9cf961a3a52160c","name":"createTransfer","url":"/interfacer/createTransfer","method":"post","upload":false,"swaggerDoc":"","x":110,"y":1400,"wires":[["e6a4ec239be873e1"]]},{"id":"e6a4ec239be873e1","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst note = msg.payload.note;\nconst provider_id = msg.payload.provider_id;\nconst receiver_id = msg.payload.receiver_id;\nconst resource_id = msg.payload.resource_id;\nconst resource_name = msg.payload.resource_name;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst location_id = msg.payload.location_id;\n\n// Produce the query and variables vars to be signed\nconst ts = new Date(Date.now());\nconst variables = {\n        \"event\": {\n            \"note\": note,\n            \"action\": \"transfer-custody\",\n            \"provider\": provider_id, \n            \"receiver\": receiver_id, \n            \"resourceInventoriedAs\": resource_id,\n            \"hasPointInTime\": ts,\n            \"atLocation\": location_id,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            }\n        },\n        \"newInventoriedResource\": {\n            \"name\" : resource_name\n        }\n    };\n    \nconst query = `mutation($event:EconomicEventCreateParams!, $newInventoriedResource: EconomicResourceCreateParams) {\n                createEconomicEvent(event:$event, newInventoriedResource:$newInventoriedResource) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                    }\n                }\n            }`;\n\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":1400,"wires":[["78bbd41a6c118d6b","0d1e2c183fa42697"]]},{"id":"fe5db33a07f08de1","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":1160,"wires":[]},{"id":"d1f6e59d5ba1e759","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\n\nvar resourceId = null;\n\nif ( msg.payload.data.createEconomicEvent.economicResource != null ){\n    resourceId = msg.payload.data.createEconomicEvent.economicResource.id;\n}else if ( msg.payload.data.createEconomicEvent.economicEvent.resourceInventoriedAs != null ){\n    resourceId = msg.payload.data.createEconomicEvent.economicEvent.resourceInventoriedAs.id;\n}else if (msg.payload.data.createEconomicEvent.economicEvent.toResourceInventoriedAs != null ){\n    resourceId = msg.payload.data.createEconomicEvent.economicEvent.toResourceInventoriedAs;\n}\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\n\nif (resourceId != null){\n    msg.payload.resourceId = resourceId;\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":1160,"wires":[["fe5db33a07f08de1"]]},{"id":"9395b1d5f101d921","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":630,"y":1160,"wires":[["d1f6e59d5ba1e759","2fdd738ccee21e9c"]]},{"id":"1239e8ccc0e65584","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Produce the query and variables vars to be signed\nvar variables = {\n        \"event\": {\n            \"note\": msg.payload.note,\n            \"action\": msg.payload.action\n        }\n};\n\nvariables.event.hasPointInTime = new Date(Date.now());\n\nif ( msg.payload.provider_id != undefined ){\n    variables.event.provider = msg.payload.provider_id;\n}\n\nif ( msg.payload.receiver_id != undefined ){\n    variables.event.receiver = msg.payload.receiver_id;\n}\n\nif ( msg.payload.processIn_id != undefined ){\n    variables.event.inputOf = msg.payload.processIn_id;\n}\n\nif ( msg.payload.processOut_id != undefined ){\n    variables.event.outputOf = msg.payload.processOut_id;\n}\n\nif ( msg.payload.unit_id != undefined && msg.payload.amount != undefined){\n    if ( msg.payload.action == 'work' ){\n        variables.event.effortQuantity = {};\n        variables.event.effortQuantity.hasUnit = msg.payload.unit_id;\n        variables.event.effortQuantity.hasNumericalValue = msg.payload.amount;\n    }else{\n        variables.event.resourceQuantity = {};\n        variables.event.resourceQuantity.hasUnit = msg.payload.unit_id;\n        variables.event.resourceQuantity.hasNumericalValue = msg.payload.amount;\n    }\n}\n\nif ( msg.payload.resource_id != undefined ){\n    variables.event.resourceInventoriedAs = msg.payload.resource_id;\n}\n\nif ( msg.payload.classification != undefined ){\n    variables.event.resourceConformsTo = msg.payload.classification;\n}\n\nif ( msg.payload.resource_name != undefined ){\n    variables.newInventoriedResource = {};\n    variables.newInventoriedResource.name = msg.payload.resource_name;\n}\n\nif ( msg.payload.resourcetrack_id != undefined ){\n    // we imply here that there is also a resource_name, otherwise bomb\n    variables.newInventoriedResource.trackingIdentifier = msg.payload.resourcetrack_id;\n}\n\nconst resource_quantity = `\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n\n`;\n\nconst resource_body = `\n                            id\n                            name\n                            onhandQuantity {` +\n                                resource_quantity +\n                            `}\n                            accountingQuantity {` +\n                                resource_quantity +\n                            `}\n                            primaryAccountable {\n                            id\n                          }\n`;\n\nconst response = `economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs {` +\n                            resource_body +\n                        `}\n                        resourceInventoriedAs {` +\n                            resource_body +\n                        `\n                        }\n                    }`;\n                    \nvar mutation = '';\n\nif (variables.newInventoriedResource != undefined){\n    mutation = `mutation($event:EconomicEventCreateParams!, $newInventoriedResource: EconomicResourceCreateParams) {\n                createEconomicEvent(event:$event, newInventoriedResource:$newInventoriedResource) {` +\n                    response +\n                `}\n            }`;\n}else{\n    mutation = `mutation($event:EconomicEventCreateParams!) {\n                createEconomicEvent(event:$event) {` +\n                    response +\n                `}\n            }`;\n}\n\nconst query = mutation;\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":1160,"wires":[["148fb20edbee43b8","2fdd738ccee21e9c"]]},{"id":"1b77e1551252bd55","type":"http in","z":"a9cf961a3a52160c","name":"createEvent","url":"/interfacer/createEvent","method":"post","upload":false,"swaggerDoc":"","x":110,"y":1160,"wires":[["1239e8ccc0e65584"]]},{"id":"17b272e3686339f5","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":930,"y":1500,"wires":[]},{"id":"30c22066ef8321d8","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const trace = msg.payload.data.economicResource.trace\nconst track = msg.payload.data.economicResource.track\n\n\nmsg.payload = {};\nmsg.payload.trace = trace;\nmsg.payload.track = track;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":1500,"wires":[["17b272e3686339f5"]]},{"id":"9b5733fa43a0796d","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":450,"y":1500,"wires":[["04a7b53f4308dcdd","30c22066ef8321d8"]]},{"id":"2db04210e5b35643","type":"function","z":"a9cf961a3a52160c","name":"Trace & Track","func":"// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nvar variables = {\n    \"id\": msg.payload.resource_id,\n    \"recurseLimit\": msg.payload.recursion,\n\n};\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `query($id:ID!, $recurseLimit:Int!) {\n                economicResource(id: $id) {\n                    trace(recurseLimit: $recurseLimit) {...trace}\n                    track(recurseLimit: $recurseLimit) {...track}\n                }\n\n            }\n\n            fragment unit on Unit {\n                id symbol label\n            }\n\n            fragment measure on Measure {\n                hasUnit {...unit}\n                hasNumericalValue\n            }\n\n            fragment spatialThing on SpatialThing {\n                id\n                name\n                mappableAddress\n                note\n                geom\n                lat alt long\n            }\n\n            fragment economicResource on EconomicResource {\n                id\n                resourceName: name\n                note\n                primaryAccountable {id name displayUsername}\n                onhandQuantity {...measure}\n                accountingQuantity {...measure}\n                currentLocation {...spatialThing}\n                trackingIdentifier\n            }\n\n            fragment economicEvent on EconomicEvent {\n                id\n                action {id}\n                provider {id name displayUsername}\n                receiver {id name displayUsername}\n                resourceQuantity {...measure}\n                resourceClassifiedAs\n                resourceInventoriedAs {...economicResource}\n                note\n            }\n\n            fragment process on Process {\n                id\n                processName: name\n                note\n                inputs {...economicEvent}\n                outputs {...economicEvent}\n            }\n\n            fragment track on ProductionFlowItem {\n                ... on EconomicResource {__typename ...economicResource}\n                ... on EconomicEvent {__typename ...economicEvent}\n                ... on Process {__typename ...process}\n            }\n\n            fragment trace on ProductionFlowItem {\n                ... on EconomicResource {__typename ...economicResource}\n                ... on EconomicEvent {__typename ...economicEvent}\n                ... on Process {__typename ...process}\n}`,\n    variables: variables\n})\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":1500,"wires":[["9b5733fa43a0796d","04a7b53f4308dcdd"]]},{"id":"04a7b53f4308dcdd","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":1560,"wires":[]},{"id":"dc031adaa1b0f61b","type":"http in","z":"a9cf961a3a52160c","name":"traceTrack","url":"/interfacer/traceTrack","method":"post","upload":false,"swaggerDoc":"","x":100,"y":1500,"wires":[["2db04210e5b35643"]]},{"id":"5ecbcce4000d69b9","type":"comment","z":"a9cf961a3a52160c","name":"Create units of measurements for resources","info":"","x":210,"y":480,"wires":[]},{"id":"c3577fc8fe24f2f3","type":"comment","z":"a9cf961a3a52160c","name":"Create resources","info":"","x":120,"y":800,"wires":[]},{"id":"bd48eea69ad3c686","type":"comment","z":"a9cf961a3a52160c","name":"Create process to encapsulate events","info":"","x":190,"y":940,"wires":[]},{"id":"ca0a726a4281a41b","type":"comment","z":"a9cf961a3a52160c","name":"Create event Transfer-custody","info":"","x":160,"y":1360,"wires":[]},{"id":"12a3dd4123e21dbd","type":"comment","z":"a9cf961a3a52160c","name":"Create events with other actions","info":"","x":170,"y":1120,"wires":[]},{"id":"21e3ef708e289378","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":780,"wires":[]},{"id":"383d01758c0eab1c","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":650,"y":720,"wires":[["21e3ef708e289378","dea2dc586e075728"]]},{"id":"a9dec105802ab695","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst unit_id = msg.payload.unit_id;\nconst name = msg.payload.name;\nconst note = msg.payload.note;\nconst classification = msg.payload.classification;\n\n// Produce the query and variables vars to be signed\n\nconst variables = {\n        \"resourceSpecification\": {\n            \"defaultUnitOfResource\": unit_id,\n            \"name\": name,\n            \"note\": note,\n            \"resourceClassifiedAs\": classification\n\t    }\n    };\n\n\nconst query = `mutation ($resourceSpecification:ResourceSpecificationCreateParams!){\n  \t            createResourceSpecification(resourceSpecification:$resourceSpecification){\n                    resourceSpecification{\n                        id,\n                        name\n                    }\n                }\n            }`;\n\n// Store the variables for later processing\nmsg.variables = variables\n          \n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":720,"wires":[["21e3ef708e289378","1953a01fc897eb9c"]]},{"id":"dea2dc586e075728","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"const specId = msg.payload.data.createResourceSpecification.resourceSpecification.id;\n\n\nmsg.payload = {};\nmsg.payload.specId = specId;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":720,"wires":[["1e377a5f89c87589"]]},{"id":"525b857facb27517","type":"http in","z":"a9cf961a3a52160c","name":"createResourceSpec","url":"/interfacer/createResourceSpec","method":"post","upload":false,"swaggerDoc":"","x":140,"y":720,"wires":[["a9dec105802ab695"]]},{"id":"1e377a5f89c87589","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":990,"y":720,"wires":[]},{"id":"b1049f596fbf4e40","type":"comment","z":"a9cf961a3a52160c","name":"Create resources specification","info":"","x":160,"y":660,"wires":[]},{"id":"beadd72e20548fee","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":590,"y":140,"wires":[]},{"id":"930cd99125d1479e","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":850,"y":240,"wires":[]},{"id":"8966a452ab67cbcd","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"// Read the payload\nvar id = msg.payload.data.createPerson.agent.id;\n\n// Provide an answer\nmsg.payload = {};\nmsg.payload.id = id;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":240,"wires":[["930cd99125d1479e"]]},{"id":"4f5171cd09d1c858","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":450,"y":240,"wires":[["12b72845a3237505","8966a452ab67cbcd"]]},{"id":"7f1cc66a89c6fe15","type":"function","z":"a9cf961a3a52160c","name":"Create Person","func":"\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['zenflows-admin'] = msg.payload.key;\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst variables = {\n    \"person\": {\n        \"name\": msg.payload.name,\n        \"user\": msg.payload.username,\n        \"email\": msg.payload.email,\n        \"eddsaPublicKey\": msg.payload.eddsaPublicKey\n    }\n};\n\n// To get this in the debug output\nmsg.variables = variables\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation ($person: PersonCreateParams!){\n        createPerson(person: $person)\n        {\n            agent{\n                id\n                name\n                user\n                email\n                eddsaPublicKey\n            }\n        }\n    }`,\n  variables: variables\n})\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":240,"wires":[["4f5171cd09d1c858","12b72845a3237505"]]},{"id":"12b72845a3237505","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":590,"y":300,"wires":[]},{"id":"2bf52a3634071bdb","type":"http in","z":"a9cf961a3a52160c","name":"createPerson","url":"/interfacer/createPerson","method":"post","upload":false,"swaggerDoc":"","x":110,"y":240,"wires":[["7f1cc66a89c6fe15"]]},{"id":"aedd97c488d9aa52","type":"comment","z":"a9cf961a3a52160c","name":"Create agents","info":"","x":110,"y":200,"wires":[]},{"id":"f114999c5ae92baa","type":"http response","z":"a9cf961a3a52160c","name":"","statusCode":"","headers":{},"x":1050,"y":360,"wires":[]},{"id":"89d96141b31db3d3","type":"function","z":"a9cf961a3a52160c","name":"Format Reply","func":"// Read the payload\nconst location = msg.payload.data.createSpatialThing.spatialThing.id;\n\nmsg.payload = {};\nmsg.payload.location = location;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":360,"wires":[["f114999c5ae92baa"]]},{"id":"316ee28d745a44e4","type":"http request","z":"a9cf961a3a52160c","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":670,"y":360,"wires":[["08da7da1110298ac","89d96141b31db3d3"]]},{"id":"299bbb363c0afa96","type":"function","z":"a9cf961a3a52160c","name":"Data to sign","func":"// Call specific data\nconst name = msg.payload.name;\nconst lat = msg.payload.lat;\nconst long = msg.payload.long;\nconst addr = msg.payload.addr;\nconst note = msg.payload.note;\n\n// Produce the query and variables vars to be signed\nconst variables = {\n        \"location\": {\n            \"name\": name,\n            \"alt\": 0,\n            \"lat\": lat,\n            \"long\": long,\n            \"mappableAddress\": addr,\n            \"note\": note\n        }\n    };\n\nconst query = `mutation($location: SpatialThingCreateParams!) {\n            createSpatialThing(spatialThing: $location) {\n                spatialThing {\n                    id\n                }\n            }\n        }`;\n    \n// Store the variables for later processing\nmsg.variables = variables\n\n// Define data for signature\nconst eddsa = msg.payload.eddsa;\nconst username = msg.payload.username;\n\nmsg.sign = {};\n\nmsg.sign.query = query;\nmsg.sign.eddsa = eddsa;\nmsg.sign.username = username;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":360,"wires":[["9ef6d03550d0dddf","08da7da1110298ac"]]},{"id":"08da7da1110298ac","type":"debug","z":"a9cf961a3a52160c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":650,"y":420,"wires":[]},{"id":"ac77678c4d67fdde","type":"http in","z":"a9cf961a3a52160c","name":"createLocation","url":"/interfacer/createLocation","method":"post","upload":false,"swaggerDoc":"","x":120,"y":360,"wires":[["299bbb363c0afa96"]]},{"id":"5a3e26e2ecdf2fef","type":"comment","z":"a9cf961a3a52160c","name":"Create locations for agents","info":"","x":150,"y":320,"wires":[]},{"id":"9ef6d03550d0dddf","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":470,"y":360,"wires":[["316ee28d745a44e4","08da7da1110298ac"]]},{"id":"cafeb261165160b1","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":450,"y":520,"wires":[["41a31f091965c362","9a42dde3957dd0ad"]]},{"id":"9a42dde3957dd0ad","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":620,"wires":[]},{"id":"1953a01fc897eb9c","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":490,"y":720,"wires":[["383d01758c0eab1c","21e3ef708e289378"]]},{"id":"d4a01c7ff1aa60f2","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":490,"y":840,"wires":[["75ad1ae27b0775fb"]]},{"id":"b1dddf12ee1a9e24","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":450,"y":980,"wires":[["cf36936a5c75bfd6","6905f51ee38526b3"]]},{"id":"148fb20edbee43b8","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":450,"y":1160,"wires":[["9395b1d5f101d921","2fdd738ccee21e9c"]]},{"id":"2fdd738ccee21e9c","type":"debug","z":"a9cf961a3a52160c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":1240,"wires":[]},{"id":"0d1e2c183fa42697","type":"subflow:f781100da59ddc5d","z":"a9cf961a3a52160c","name":"","x":450,"y":1400,"wires":[["1f51d816c9254a8e","78bbd41a6c118d6b"]]},{"id":"a79b4ab6bf5d8244","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":100,"wires":[["36c2b9b9f579da3c"]]},{"id":"36c2b9b9f579da3c","type":"function","z":"29dcfb15ba1e5f55","name":"SetUsers","func":"var users_data = {};\nusers_data['A'] = {\n    \"userChallenges\": {\n        \"whereParentsMet\": \"London\",\n        \"nameFirstPet\": \"Fuffy\",\n        \"nameFirstTeacher\": \"Jim\",\n        \"whereHomeTown\": \"Paris\",\n        \"nameMotherMaid\": \"Wright\"\n    },\n    \"name\": \"User A\",\n    \"username\": \"userA_username\",\n    \"email\": \"userA@example.org\",\n    \"note\": \"me.userA.org\"\n}\nusers_data['B'] = {\n    \"userChallenges\": {\n        \"whereParentsMet\": \"Amsterdam\",\n        \"nameFirstPet\": \"Toby\",\n        \"nameFirstTeacher\": \"Juliet\",\n        \"whereHomeTown\": \"Rome\",\n        \"nameMotherMaid\": \"Banks\"\n    },\n    \"name\": \"User B\",\n    \"username\": \"userB\",\n    \"email\": \"userB@example.org\",\n    \"note\": \"me.userB.org\"\n}\nflow.set(\"users_data\", users_data);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":100,"wires":[["3725886bd3c50b6c"]]},{"id":"3725886bd3c50b6c","type":"function","z":"29dcfb15ba1e5f55","name":"SetLocations","func":"var locs_data = {};\nlocs_data['A'] = {\n    \"name\": \"OLVG\",\n    \"lat\": 52.35871773455108,\n    \"long\": 4.916762398221842,\n    \"addr\": \"Oosterpark 9, 1091 AC Amsterdam\",\n    \"note\": \"location.user1.org\"\n};\n\nlocs_data['B'] = {\n    \"name\": \"CleanLease\",\n    \"lat\": 51.47240440868687,\n    \"long\": 5.412460440524406,\n    \"addr\": \"De schakel 30, 5651 Eindhoven\",\n    \"note\": \"location.user2.org\"\n};\n\nflow.set(\"locs_data\", locs_data);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":100,"wires":[["7d4f4bdb4e7c6c95"]]},{"id":"7d4f4bdb4e7c6c95","type":"function","z":"29dcfb15ba1e5f55","name":"SetUnits","func":"var units_data = {}\n\nflow.set(\"units_data\", units_data);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":100,"wires":[["336c5e4c8f8cc1b1"]]},{"id":"336c5e4c8f8cc1b1","type":"function","z":"29dcfb15ba1e5f55","name":"SetResSpec","func":"var res_spec_data = {}\n\nflow.set(\"res_spec_data\", res_spec_data);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":810,"y":100,"wires":[["5b2f17ac3a241915"]]},{"id":"40df197a0716b1b7","type":"function","z":"29dcfb15ba1e5f55","name":"ReadHMAC","func":"var users_data = flow.get(\"users_data\");\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"users_data\": users_data,\n    \"endpoint\": flow.get(\"endpoint\")\n}\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/read_HMAC\"\n\n\n\n\n// Read HMAC or get it from the server\nfor (let user of Object.keys(users_data)) {\n    payload[\"user\"] = user;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":180,"wires":[["b13278d877a37be2"]]},{"id":"b2ccc9e686bca31f","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":180,"wires":[["40df197a0716b1b7"]]},{"id":"02e34d62992348c5","type":"http request","z":"29dcfb15ba1e5f55","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":910,"y":340,"wires":[["1d832f2942131682","8378fdfc3cc86d2d"]]},{"id":"5b2f17ac3a241915","type":"function","z":"29dcfb15ba1e5f55","name":"SetGlobals","func":"var endpoint = \"https://zenflows.interfacer-staging.dyne.im/api\";\n\nflow.set(\"endpoint\", endpoint);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":100,"wires":[[]]},{"id":"8efe03272d25c395","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":280,"wires":[["02e34d62992348c5"],[]]},{"id":"281f2125fecc5a96","type":"function","z":"29dcfb15ba1e5f55","name":"ReadKeyPair","func":"var users_data = flow.get(\"users_data\");\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"users_data\": users_data\n};\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/read_keypair\"\n\n\n// Call the function to generate a keypair\nfor (let user of Object.keys(users_data)) {\n    payload[\"user\"] = user;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":280,"wires":[["8efe03272d25c395"]]},{"id":"925ef2579079eecd","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":280,"wires":[["281f2125fecc5a96"]]},{"id":"b13278d877a37be2","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":180,"wires":[["02e34d62992348c5"],[]]},{"id":"23380975a21cbf2a","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":360,"wires":[["02e34d62992348c5"],[]]},{"id":"f9e9f6894f2fb3ec","type":"function","z":"29dcfb15ba1e5f55","name":"GetIDPerson","func":"var users_data = flow.get(\"users_data\");\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"users_data\": users_data,\n    \"endpoint\": flow.get(\"endpoint\")\n};\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/get_id_person\"\n\n\nfor (let user of Object.keys(users_data)) {\n    payload[\"user\"] = user;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":360,"wires":[["23380975a21cbf2a"]]},{"id":"9497f5fed61ce328","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":360,"wires":[["f9e9f6894f2fb3ec"]]},{"id":"f2aab741b3fb4a2f","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":440,"wires":[["02e34d62992348c5"],[]]},{"id":"a66652e23c1e09a1","type":"function","z":"29dcfb15ba1e5f55","name":"GetLocationID","func":"var users_data = flow.get(\"users_data\");\nvar locs_data = flow.get(\"locs_data\");\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"locs_data\": locs_data,\n    \"endpoint\": flow.get(\"endpoint\")\n};\n\nmsg.headers = {};\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/get_location_id\"\n\n\nfor (let user of Object.keys(users_data)) {\n    payload[\"user_data\"] = users_data[user];\n    payload[\"user\"] = user;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":440,"wires":[["f2aab741b3fb4a2f"]]},{"id":"14b02b72ef31d19e","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":440,"wires":[["a66652e23c1e09a1"]]},{"id":"68358bd027d63c04","type":"debug","z":"29dcfb15ba1e5f55","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1260,"y":340,"wires":[]},{"id":"8378fdfc3cc86d2d","type":"debug","z":"29dcfb15ba1e5f55","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1100,"y":400,"wires":[]},{"id":"0f704588886f5c9f","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":540,"wires":[["02e34d62992348c5"],[]]},{"id":"74d4ae7a509ae173","type":"function","z":"29dcfb15ba1e5f55","name":"SetUserLocation","func":"var users_data = flow.get(\"users_data\");\nvar locs_data = flow.get(\"locs_data\");\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"users_data\": users_data,\n    \"locs_data\": locs_data,\n    \"endpoint\": flow.get(\"endpoint\")\n};\n\nmsg.headers = {};\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/set_user_location\"\n\n\nfor (let user of Object.keys(users_data)) {\n    payload[\"user\"] = user;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;\nreturn","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":540,"wires":[["0f704588886f5c9f"]]},{"id":"5d0901a7dbea4601","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":540,"wires":[["74d4ae7a509ae173"]]},{"id":"1d832f2942131682","type":"function","z":"29dcfb15ba1e5f55","name":"CopyResults","func":"var users_data = flow.get(\"users_data\");\nvar locs_data = flow.get(\"locs_data\");\nvar units_data = flow.get(\"units_data\");\n\nvar user_ret = msg.payload.result.user || undefined;\nvar user_data_ret = msg.payload.result[\"user_data\"] || undefined;\nvar users_data_ret = msg.payload.result[\"users_data\"] || undefined;\nvar locs_data_ret = msg.payload.result[\"locs_data\"] || undefined;\nvar units_data_ret = msg.payload.result[\"units_data\"] || undefined;\n\nif ((user_data_ret != undefined) && (users_data_ret != undefined)){\n    throw \"user_data and users_data returned\";\n}\nif (user_data_ret != undefined){\n    \n    if (user_ret == undefined){\n        if (units_data_ret != undefined){\n            var unit_name_ret = msg.payload.result[\"name\"] || undefined;\n            if (unit_name_ret == undefined){\n                throw \"units_data is returned but no unit name is given\";    \n            }else{\n                units_data[unit_name_ret] = units_data_ret[unit_name_ret];\n                flow.set(\"units_data\", units_data);\n            }\n        }else{\n            throw \"user_data is returned but no user is given\";\n        }\n        \n    }else{\n        users_data[user_ret] = user_data_ret;\n        flow.set(\"users_data\", users_data);\n    }\n}\nif (users_data_ret != undefined) {\n    if (user_ret == undefined){\n        throw \"users_data is returned but no user is given\";\n    }else{\n        users_data[user_ret] = users_data_ret[user_ret];\n        flow.set(\"users_data\", users_data);\n    }\n    \n}\nif (locs_data_ret != undefined) {\n    if (user_ret == undefined){\n        throw \"locs_data is returned but no user is given\";\n    }else{\n        locs_data[user_ret] = locs_data_ret[user_ret];\n        flow.set(\"locs_data\", locs_data);\n    }\n    \n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1090,"y":340,"wires":[["68358bd027d63c04"]]},{"id":"28ed4cab76f7ef65","type":"inject","z":"29dcfb15ba1e5f55","name":"","props":[{"p":"timestamp","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":640,"wires":[["f00e3b811f3a960d"]]},{"id":"f00e3b811f3a960d","type":"function","z":"29dcfb15ba1e5f55","name":"GetUnitId","func":"var users_data = flow.get(\"users_data\");\nvar units_data = flow.get(\"units_data\");\nvar aUser = Object.keys(users_data)[0]\n\nvar payload = {\n    \"file\": \"NotUsed\",\n    \"user_data\": users_data[aUser],\n    \"units_data\": units_data,\n    \"endpoint\": flow.get(\"endpoint\")\n};\n\nmsg.headers = {};\nmsg.headers[\"content-type\"] = \"application/json\";\nmsg.method = \"POST\"\nmsg.url = \"http://0.0.0.0:8000/get_unit_id\"\n\nconst units = [\n    {\n        \"name\": \"piece\",\n        \"label\": \"u_piece\",\n        \"symbol\": \"om2:one\"\n    },\n    {\n        \"name\": \"mass\",\n        \"label\": \"kg\",\n        \"symbol\": \"om2:kilogram\"\n    },\n    {\n        \"name\": \"volume\",\n        \"label\": \"lt\",\n        \"symbol\": \"om2:litre\"\n    },\n    {\n        \"name\": \"time\",\n        \"label\": \"h\",\n        \"symbol\": \"om2:hour\"\n    }\n]\n\nfor (let unit of units) {\n    payload[\"name\"] = unit.name;\n    payload[\"label\"] = unit.label;\n    payload[\"symbol\"] = unit.symbol;\n    msg.payload = payload;\n\n    node.send(msg); // Send the message\n}\n\n// return msg;\nreturn","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":640,"wires":[["1ccccddb6f34606b"]]},{"id":"1ccccddb6f34606b","type":"switch","z":"29dcfb15ba1e5f55","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":640,"wires":[["02e34d62992348c5"],[]]}]